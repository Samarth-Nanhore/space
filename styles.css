/* this is required and for all  */

  @import url('https://fonts.googleapis.com/css2?family=Amatic+SC&family=Bangers&family=Inter&family=Josefin+Sans&family=Montserrat&family=Noto+Sans&family=Open+Sans&family=Roboto&family=Sora&family=Source+Sans+Pro&display=swap');
  @import url('https://fonts.googleapis.com/css2?family=Amatic+SC&family=Bangers&family=Inter&family=Josefin+Sans&family=Montserrat&family=Noto+Sans&family=Open+Sans&family=Pacifico&family=Roboto&family=Sora&family=Source+Sans+Pro&display=swap');
  @import url('https://fonts.googleapis.com/css2?family=Amatic+SC&family=Bangers&family=Inter&family=Josefin+Sans&family=Montserrat&family=Noto+Sans&family=Nunito+Sans&family=Open+Sans&family=Pacifico&family=Roboto&family=Sora&family=Source+Sans+Pro&display=swap');

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    font-family: 'Montserrat', sans-serif;
}

/* help to remove underline mark */
a {
    text-decoration: none;
}

li {
    list-style: none;
}

.navbar{
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 20px;
    background-color: #d1d5db;
    color:white ;
    margin: 5px;
    border-radius: 5px;
}

.nav-links a{
    color: white;
}

/* logo */
.logo{
    font-size: 32px;
    font-family: 'Pacifico', cursive;
}

/* navbar menu */
.menu{
    display: flex;
    gap: 1em;
    font-size: 18px;
}

.menu li:hover {
background-color: #94a3b8;
border-radius: 5px;
transition: 0.3s ease;
}

.menu li{
    padding: 5px 14px;
}
input[type=checkbox]{
    display: none;
}

.hamburger{
    display: none;
    font-size: 24px;
    user-select: none;
}





/* this for when screen size is almost mobile size */

@media (max-width: 768px) {
    .menu {
        display: none;
        position: absolute;
        background-color: #d1d5db;
        right: 0;
        left: 0;
        text-align: center;
        padding: 16px 0;
    }

    .menu li:hover{
display: inline-block;
background-color: #94a3b8;
transition: 0.3s ease;


    }
.menu li + li {
    margin-top: 12px;
}

input[type=checkbox]:checked ~ .menu{
    display: block;
}
.hamburger{
    display: block;
}


}






/* this is for when navigation link active  */

menu a {
    text-decoration: none;
    border-bottom: 2px solid transparent;
    transition: border-bottom 250ms ease-in-out;
}

.active {
    border-bottom: 3px solid #374151;
  }










.container{
    overflow: hidden;
    max-width: 32em;
    margin: 0 auto;
    padding: 0 2.5em;
}


.container h1{
text-align: center;
font-family: 'Nunito Sans', sans-serif;
font-size: 2em;
margin: 2.5em 0 1.25em;
}

.container .intro {
    font-family: 'Nunito Sans', sans-serif;
    letter-spacing: 3px;
    text-align: center;
    text-transform: uppercase;
    color: #aaa;
    margin-bottom: 2em;
    font-weight: 400;
}


.container .article{
    font-family:'Nunito Sans', sans-serif ;
color: #333;
}



footer {
    background-color: #d1d5db;
    color: #333;
    padding: 40px;
    text-align: center;
    margin-top: 2rem;
}

.containertwo{
max-width: 1140px;
margin: 0 auto;
}






/* galley.html css here */

.gallerycontainer{
    overflow: hidden;
    max-width: 32em;
    margin: 0 auto;
    padding: 0 2.5em;
}


.gallerycontainer h1{
    text-align: center;
font-family: 'Nunito Sans', sans-serif;
font-size: 2em;
margin: 0.5em 0 0.25em;
}


/* image container css here */

.image-container {
    display: flex;
    flex-wrap: wrap;
    overflow: hidden;
    max-width: 32em;
    margin: 2rem auto;
    padding: 0 2.5em;

}

/* display: flex - "display: flex" in CSS is used to specify the layout of child elements within a container. It sets the container element as a flex container and allows its child elements (flex items) to be positioned along a horizontal or vertical axis, using flexible widths and heights. This makes it easier to align, distribute, and manage the size and position of the elements within the container.

Flexbox is a modern layout model that provides a more efficient and flexible way to layout web pages compared to traditional methods. The "display: flex" property is the starting point for using flexbox, and allows you to control the direction of the main axis, wrap items, align items, and control the size and spacing of elements within the container. */


/* flex-wrap: wrap - "flex-wrap: wrap" in CSS is used in conjunction with the "display: flex" property to control the behavior of items within a flex container when the size of the container is smaller than the combined size of the flex items.

By default, flex items are set to "flex-wrap: nowrap", which means that they will not wrap to the next line. If the container is smaller than the combined size of the flex items, they will overflow the container horizontally.

When "flex-wrap: wrap" is used, flex items are allowed to wrap to the next line if there is not enough space for them within the container. This allows for more flexible layout and better handling of responsive design. For example, you could use "flex-wrap: wrap" to ensure that items are always visible on smaller screens, or to control the number of items per row in a grid-style layout. */

.image-container img {
    width: 100%;
    /* height: auto; */
    height: 60%;
    margin: 10px;
    filter: grayscale(100%);
    transition: filter 250ms ease-in-out;
}

/* "filter: grayscale(100%)" in CSS is used to apply a grayscale effect to an element. It sets the grayscale value of an element to 100%, making it completely gray and effectively removing all color. */

.image-container img:hover {
    filter: grayscale(0%);
}

@media (min-width: 768px) {
    .image-container img {
        width: calc(33.33% - 20px);
    }
}

.note {
    text-align: center;
    margin-top: 1rem;
    font-size: large;
    font-weight: 500;
}




















